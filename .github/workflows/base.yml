name: base
on:
  workflow_dispatch:
  push:
jobs:
  do-the-thing:
    runs-on: ubuntu-latest
    steps:
      - name: enable-sources
        run: cat /etc/apt/sources.list | sed s/^deb/deb-src/ | sudo tee /etc/apt/sources.list.d/sources.src.list
      - name: apty-stuff
        run: |
          sudo apt update
          sudo apt build-dep -y linux-base
          sudo apt install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu git flex bison bc zip
      - name: fetch
        run: git clone https://github.com/smaeul/linux.git; 
      - name: switch-branch
        run: git checkout rk356x-ebc-dev
        working-directory: ./linux
      - run: make -j $(nproc) ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- pinenote_defconfig
        working-directory: ./linux
      - run: make -j $(nproc) ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- all
        working-directory: ./linux
      - run: make -j $(nproc) ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- INSTALL_MOD_PATH=${PWD}/pack modules_install
        working-directory: ./linux
      - run: make -j $(nproc) ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- dtbs
        working-directory: ./linux
      - run: make -j $(nproc) ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- INSTALL_PATH=${PWD}/pack dtbs_install
        working-directory: ./linux
      - run: make -j $(nproc) ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- bindeb-pkg
        working-directory: ./linux
      - name: build-zip
        run: |
          mkdir output
          mv linux/arch/arm64/boot/Image output/
          rm linux/pack/lib/modules/5*/build
          rm linux/pack/lib/modules/5*/source
          mv linux/pack/lib/modules output/
          mv linux/pack/dtbs/5*/rockchip/rk3566-pinenote.dtb output/
          mv *deb output/
          cd output && zip ../release.zip -r *
      - name: sams-version
        run: echo "::set-output name=version::$(cd linux/; git rev-parse --short HEAD)"
        id: version
      - name: create-release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ steps.version.outputs.version}}
          body: "Automated build of smauel's kernel"
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: upload-release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release.zip
          asset_name: release.zip
          asset_content_type: application/zip

